generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  open_tasks    Decimal   @default(0) @db.Decimal
  open_requests Decimal   @default(0) @db.Decimal
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Task {
  id               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  completed_at     DateTime? @default(now()) @db.Timestamptz(6)
  title            String    @db.VarChar
  description      String?   @db.VarChar
  ticket           String?   @db.VarChar
  complete         Boolean   @default(false)
  assigned_to_user String
  assigned_by_user String
  self_assigned    Boolean   @default(true)
  importance       Decimal   @default(1) @db.Decimal
}
